name: CI/CD for Firebase Hosting

on:
  # pushをトリガーにパイプライン始動
  push:
  # 動作確認しやすいように手動起動をサポート
  workflow_dispatch:

# デフォルトシェルでパイプエラーを有効化
defaults:
  run:
    shell: bash

jobs:
  # テスト、およびビルドを実行
  test-build:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      - name: Upload build artifacts (dist)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: download build artifacts (dist)
        uses: actions/download-artifact@v4
        with:
          name: "dist"
          path: "dist"
      - name: Install firebase-tools
        run: npm install --save-dev firebase-tools
      - name: Decode Firebase service account key
        run: |
          echo "${{ secrets.FIREBASE_KEY }}" | base64 -d > ./firebase-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/firebase-key.json" >> $GITHUB_ENV
      #- name: change space
      #  run: ./node_modules/.bin/firebase use ${{ secrets.FIREBASE_PROJECT_ID }}
      - name: Deploy to Firebase Hosting
        run: |
          ./node_modules/.bin/firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }}
      - name: delete GOOGLE_APPLICATION_CREDENTIALS
        run: rm $GOOGLE_APPLICATION_CREDENTIALS
        if: ${{ always() }}
